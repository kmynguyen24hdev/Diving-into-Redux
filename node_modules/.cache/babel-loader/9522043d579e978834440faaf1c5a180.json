{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n}; // redux toolkit\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // get actions\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions; // khoi tao store, tham so reducer\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n}); // Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n//   return state;\n// };\n//export const store = createStore(counterReducer);","map":{"version":3,"names":["configureStore","createSlice","createStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","counterActions","actions","authActions","store","reducer","auth"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/toggle/toggle/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n};\n\n// redux toolkit\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst initialAuthState = { isAuthenticated: false };\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n        state.isAuthenticated = true;\n    },\n    logout(state) {\n        state.isAuthenticated = false;\n\n    },\n  },\n});\n\n// get actions\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n// khoi tao store, tham so reducer\nexport const store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\n// Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n\n//   return state;\n// };\n\n//export const store = createStore(counterReducer);\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CADiB;EAE1BC,WAAW,EAAE;AAFa,CAA5B,C,CAKA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAEL,mBAFiB;EAG/BM,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACP,OAAN;IACD,CAHO;;IAIRQ,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACP,OAAN;IACD,CANO;;IAORS,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;IACD;;EAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAnB,CAAzB;AAEA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAES,gBAFc;EAG5BR,QAAQ,EAAE;IACRW,KAAK,CAACT,KAAD,EAAQ;MACTA,KAAK,CAACO,eAAN,GAAwB,IAAxB;IACH,CAHO;;IAIRG,MAAM,CAACV,KAAD,EAAQ;MACVA,KAAK,CAACO,eAAN,GAAwB,KAAxB;IAEH;;EAPO;AAHkB,CAAD,CAA7B,C,CAcA;;AACA,OAAO,MAAMI,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGL,SAAS,CAACI,OAA9B,C,CAEP;;AACA,OAAO,MAAME,KAAK,GAAGzB,cAAc,CAAC;EAClC0B,OAAO,EAAE;IAAEtB,OAAO,EAAEE,YAAY,CAACoB,OAAxB;IAAiCC,IAAI,EAAER,SAAS,CAACO;EAAjD;AADyB,CAAD,CAA5B,C,CAIP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}