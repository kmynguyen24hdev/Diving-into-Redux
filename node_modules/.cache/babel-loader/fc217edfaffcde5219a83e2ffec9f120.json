{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nexport const store = createStore(counterReducer);","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/toggle/toggle/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n        state.counter++\n    },\n    decrement(state) {\n        state.counter--\n    },\n    increase(state, action) {\n        state.counter = state.counter + action.amount\n    },\n    toggleCounter() {}\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return { counter: state.counter + 1, showCounter: state.showCounter };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return { counter: state.counter - 1, showCounter: state.showCounter };\n  }\n\n  if (action.type === \"toggle\") {\n    return { counter: state.counter, showCounter: !state.showCounter };\n  }\n\n  return state;\n};\n\nexport const store = createStore(counterReducer);\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CADU;EAEnBC,WAAW,EAAE;AAFM,CAArB;AAKAJ,WAAW,CAAC;EACVK,IAAI,EAAE,SADI;EAEVH,YAFU;EAGVI,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACbA,KAAK,CAACL,OAAN;IACH,CAHO;;IAIRM,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACL,OAAN;IACH,CANO;;IAORO,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpBH,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;IACH,CATO;;IAURC,aAAa,GAAG,CAAE;;EAVV;AAHA,CAAD,CAAX;;AAiBA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCN,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXS,MAAW;;EACvD,IAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;MAA8BC,WAAW,EAAEI,KAAK,CAACJ;IAAjD,CAAP;EACD;;EAED,IAAIO,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAD3B;MAELR,WAAW,EAAEI,KAAK,CAACJ;IAFd,CAAP;EAID;;EAED,IAAIO,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;MAA8BC,WAAW,EAAEI,KAAK,CAACJ;IAAjD,CAAP;EACD;;EAED,IAAIO,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MAAEZ,OAAO,EAAEK,KAAK,CAACL,OAAjB;MAA0BC,WAAW,EAAE,CAACI,KAAK,CAACJ;IAA9C,CAAP;EACD;;EAED,OAAOI,KAAP;AACD,CArBD;;AAuBA,OAAO,MAAMQ,KAAK,GAAGf,WAAW,CAACa,cAAD,CAAzB"},"metadata":{},"sourceType":"module"}