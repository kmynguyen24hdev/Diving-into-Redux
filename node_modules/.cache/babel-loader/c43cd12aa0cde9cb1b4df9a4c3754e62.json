{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // get actions\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions; // khoi tao store, tham so reducer\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n}); // Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n//   return state;\n// };\n//export const store = createStore(counterReducer);","map":{"version":3,"names":["configureStore","createSlice","createStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","counterActions","counterSlice","actions","authActions","store","reducer","counter","auth"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/toggle/toggle/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\n\n\nconst initialAuthState = { isAuthenticated: false };\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n        state.isAuthenticated = true;\n    },\n    logout(state) {\n        state.isAuthenticated = false;\n\n    },\n  },\n});\n\n// get actions\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n// khoi tao store, tham so reducer\nexport const store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\n// Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n\n//   return state;\n// };\n\n//export const store = createStore(counterReducer);\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAIA,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAnB,CAAzB;AAEA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAEJ,gBAFc;EAG5BK,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAD,EAAQ;MACTA,KAAK,CAACN,eAAN,GAAwB,IAAxB;IACH,CAHO;;IAIRO,MAAM,CAACD,KAAD,EAAQ;MACVA,KAAK,CAACN,eAAN,GAAwB,KAAxB;IAEH;;EAPO;AAHkB,CAAD,CAA7B,C,CAcA;;AACA,OAAO,MAAMQ,cAAc,GAAGC,YAAY,CAACC,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGV,SAAS,CAACS,OAA9B,C,CAEP;;AACA,OAAO,MAAME,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAE;IAAEC,OAAO,EAAEL,YAAY,CAACI,OAAxB;IAAiCE,IAAI,EAAEd,SAAS,CAACY;EAAjD;AADyB,CAAD,CAA5B,C,CAIP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}