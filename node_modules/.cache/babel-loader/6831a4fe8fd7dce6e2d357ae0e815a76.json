{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n}; // redux toolkit\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // khoi tao store, tham so \n\nexport const store = configureStore({\n  reducer: counterSlice.reducer\n}); // Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n//   return state;\n// };\n//export const store = createStore(counterReducer);","map":{"version":3,"names":["configureStore","createSlice","createStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/toggle/toggle/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\n\n// redux toolkit\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n        state.counter++\n    },\n    decrement(state) {\n        state.counter--\n    },\n    increase(state, action) {\n        state.counter = state.counter + action.amount\n    },\n    toggleCounter(state) {\n        state.showCounter= !state.showCounter\n    }\n  },\n});\n\n// khoi tao store, tham so \nexport const store = configureStore({\n    reducer: counterSlice.reducer\n})\n\n// Redux core\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n\n//   return state;\n// };\n\n//export const store = createStore(counterReducer);\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CADU;EAEnBC,WAAW,EAAE;AAFM,CAArB,C,CAMA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SADyB;EAE/BJ,YAF+B;EAG/BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACbA,KAAK,CAACN,OAAN;IACH,CAHO;;IAIRO,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACN,OAAN;IACH,CANO;;IAORQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;IACH,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACjBA,KAAK,CAACL,WAAN,GAAmB,CAACK,KAAK,CAACL,WAA1B;IACH;;EAZO;AAHqB,CAAD,CAAhC,C,CAmBA;;AACA,OAAO,MAAMW,KAAK,GAAGhB,cAAc,CAAC;EAChCiB,OAAO,EAAEX,YAAY,CAACW;AADU,CAAD,CAA5B,C,CAIP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}